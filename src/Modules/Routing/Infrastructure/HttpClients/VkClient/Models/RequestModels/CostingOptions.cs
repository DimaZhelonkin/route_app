using Newtonsoft.Json;

namespace Ark.Routing.HttpClients.VkClient.Models.RequestModels;

/// <summary>
///     Параметры расчета маршрута
/// </summary>
public class CostingOptions
{
}

/// <summary>
///     Параметры расчета маршрута для автомобилей
/// </summary>
public class AutoCostingOptions : CostingOptions
{
    /// <summary>
    ///     Использовать грунтовые дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать грунтовые дороги;
    ///     1 — использовать грунтовые дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_unpaved")]
    public float UseUnpaved { get; set; } = 0.5f;


    /// <summary>
    ///     Использовать автомагистрали при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать автомагистрали;
    ///     1 (по умолчанию) — использовать автомагистрали.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_highways":0</example>
    [JsonProperty("use_highways")]
    public float UseHighways { get; set; } = 1f;

    /// <summary>
    ///     Использовать платные дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать платные дороги;
    ///     1 — использовать платные дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_tolls":0</example>
    [JsonProperty("use_tolls")]
    public float UseTolls { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать паромные переправы при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать паромные переправы;
    ///     1 — использовать паромные переправы.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_ferry":0.1</example>
    [JsonProperty("use_ferry")]
    public float UseFerry { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать при построении маршрута дороги, пересекающие границы других государств. Определяется значением от 0 до
    ///     1, где:
    ///     0 — не использовать использовать дороги пересекающие границы других государств;
    ///     1 (по умолчанию) — использовать использовать дороги пересекающие границы других государств.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_border_crossing")]
    public float UseBorderCrossing { get; set; } = 1f;

    /// <summary>
    ///     Учитывать пробки и дорожные события при построении маршрута. Возможные значения:
    ///     false (по умолчанию) — не учитывать пробки и дорожные события;
    ///     true — учитывать пробки и дорожные события.
    /// </summary>
    /// <example>"traffic":true</example>
    [JsonProperty("traffic")]
    public bool Traffic { get; set; }
}

/// <summary>
///     Параметры расчета маршрута для грузовых автомобилей
/// </summary>
public class TruckCostingOptions : CostingOptions
{
    /// <summary>
    ///     Указание массы автомобиля в тоннах, для построения маршрута с учётом допустимых весовых нагрузок на дорожную сеть.
    ///     По умолчанию — 21.77 тонн.
    ///     Номер дорожного знака по ГОСТ: 3.11.
    /// </summary>
    /// <example>"weight":10</example>
    [JsonProperty("weight")]
    public float Weight { get; set; } = 21.77f;

    /// <summary>
    ///     Высота грузовика в метрах.
    ///     По умолчанию — 4.11 м.
    ///     Номер дорожного знака по ГОСТ: 3.13.
    /// </summary>
    /// <example>"height":4.0</example>
    [JsonProperty("height")]
    public float Height { get; set; } = 4.11f;

    /// <summary>
    ///     Ширина грузовика в метрах.
    ///     По умолчанию — 9.07 м.
    ///     Номер дорожного знака по ГОСТ: 3.14.
    /// </summary>
    /// <example>"width":11.1</example>
    [JsonProperty("width")]
    public float Width { get; set; } = 9.07f;

    /// <summary>
    ///     Длина грузовика в метрах.
    ///     По умолчанию — 21.64 м.
    ///     Номер дорожного знака по ГОСТ: 3.15.
    /// </summary>
    /// <example>"length":19.4</example>
    [JsonProperty("length")]
    public float Length { get; set; } = 21.64f;

    /// <summary>
    ///     Нагрузка на ось в тоннах.
    ///     По умолчанию — 9.07 тонн.
    ///     Номер дорожного знака по ГОСТ: 3.12.
    /// </summary>
    /// <example>"axle_load":10.3</example>
    [JsonProperty("axle_load")]
    public float AxleLoad { get; set; } = 9.07f;

    /// <summary>
    ///     Флаг, определяющий, везет ли грузовик опасные материалы.
    ///     По умолчанию — false.
    ///     Номер дорожного знака по ГОСТ: 3.32.
    /// </summary>
    /// <example>"hazmat":true</example>
    [JsonProperty("hazmat")]
    public bool Hazmat { get; set; }

    /// <summary>
    ///     Использовать грунтовые дороги при построении маршрута.
    ///     Определяется значением от 0 до 1, где:
    ///     0 — не использовать грунтовые дороги;
    ///     1 — использовать грунтовые дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_unpaved")]
    public float UseUnpaved { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать автомагистрали при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать автомагистрали;
    ///     1 (по умолчанию) — использовать автомагистрали.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_highways":0</example>
    [JsonProperty("use_highways")]
    public float UseHighways { get; set; } = 1f;

    /// <summary>
    ///     Использовать платные дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать платные дороги;
    ///     1 — использовать платные дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_tolls":0</example>
    [JsonProperty("use_tolls")]
    public float UseTolls { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать паромные переправы при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать паромные переправы;
    ///     1 — использовать паромные переправы.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_ferry":0.1</example>
    [JsonProperty("use_ferry")]
    public float UseFerry { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать при построении маршрута дороги, пересекающие границы других государств. Определяется значением от 0 до
    ///     1, где:
    ///     0 — не использовать использовать дороги пересекающие границы других государств;
    ///     1 (по умолчанию) — использовать использовать дороги пересекающие границы других государств.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_border_crossing")]
    public float UseBorderCrossing { get; set; } = 1f;

    /// <summary>
    ///     Учитывать пробки и дорожные события при построении маршрута.
    ///     Возможные значения:
    ///     false (по умолчанию) — не учитывать пробки и дорожные события;
    ///     true — учитывать пробки и дорожные события.
    /// </summary>
    /// <example>"traffic":true</example>
    [JsonProperty("traffic")]
    public bool Traffic { get; set; }
}

/// <summary>
///     Параметры расчета маршрута для пешеходов
/// </summary>
public class PedestrianCostingOptions : CostingOptions
{
    /// <summary>
    ///     Средняя скокрость движения пешком.
    ///     Указывается в километрах в час.
    ///     По умолчанию — 5.1 км/ч.
    /// </summary>
    /// <example>"walking_speed":3</example>
    [JsonProperty("walking_speed")]
    public float WalkingSpeed { get; set; } = 5.1f;

    /// <summary>
    ///     Использовать паромные переправы при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать паромные переправы;
    ///     1 — использовать паромные переправы.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_ferry":0.1</example>
    [JsonProperty("use_ferry")]
    public float UseFerry { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать грунтовые дороги при построении маршрута.
    ///     Определяется значением от 0 до 1, где:
    ///     0 — не использовать грунтовые дороги;
    ///     1 — использовать грунтовые дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_unpaved")]
    public float UseUnpaved { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать автомобильные дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать автомобильные дороги;
    ///     1 — использовать автомобильные дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_roads")]
    public float UseRoads { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать при построении маршрута дороги, пересекающие границы других государств. Определяется значением от 0 до
    ///     1, где:
    ///     0 — не использовать использовать дороги пересекающие границы других государств;
    ///     1 (по умолчанию) — использовать использовать дороги пересекающие границы других государств.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_border_crossing")]
    public float UseBorderCrossing { get; set; } = 1f;

    /// <summary>
    ///     Следовать по маршруту с перепадами высот. Участвует в выборе подходящего маршрута и расчете ETA. Определяется
    ///     значением от 0 до 1, где:
    ///     0 — максимально избегать перепадов рельефа местности, даже если это приведет к построению более длинного маршрута;
    ///     1 — не избегать перепадов рельефа местности.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    ///     Важно помнить, что не во всех случаях удается построить альтернативный маршрут с учетом use_hills
    ///     (например, если на вершину холма ведет единственная дорога).
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_hills")]
    public float UseHills { get; set; } = 0.5f;
}

/// <summary>
///     Параметры расчета маршрута для велосипедов
/// </summary>
public class BicycleCostingOptions : CostingOptions
{
    /// <summary>
    ///     Средняя скорость движения на велосипеде.
    ///     Указывается в километрах в час.
    ///     По умолчанию — 20 км/ч
    /// </summary>
    /// <example>"cycling_speed":30</example>
    [JsonProperty("cycling_speed")]
    public float CyclingSpeed { get; set; } = 20f;

    /// <summary>
    ///     Использовать паромные переправы при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать паромные переправы;
    ///     1 — использовать паромные переправы.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_ferry":0.1</example>
    [JsonProperty("use_ferry")]
    public float UseFerry { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать грунтовые дороги при построении маршрута.
    ///     Определяется значением от 0 до 1, где:
    ///     0 — не использовать грунтовые дороги;
    ///     1 — использовать грунтовые дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_unpaved")]
    public float UseUnpaved { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать автомобильные дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать автомобильные дороги;
    ///     1 — использовать автомобильные дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_roads")]
    public float UseRoads { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать при построении маршрута дороги, пересекающие границы других государств. Определяется значением от 0 до
    ///     1, где:
    ///     0 — не использовать использовать дороги пересекающие границы других государств;
    ///     1 (по умолчанию) — использовать использовать дороги пересекающие границы других государств.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_border_crossing")]
    public float UseBorderCrossing { get; set; } = 1f;

    /// <summary>
    ///     Следовать по маршруту с перепадами высот. Участвует в выборе подходящего маршрута и расчете ETA. Определяется
    ///     значением от 0 до 1, где:
    ///     0 — максимально избегать перепадов рельефа местности, даже если это приведет к построению более длинного маршрута;
    ///     1 — не избегать перепадов рельефа местности.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    ///     Важно помнить, что не во всех случаях удается построить альтернативный маршрут с учетом use_hills
    ///     (например, если на вершину холма ведет единственная дорога).
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_hills")]
    public float UseHills { get; set; } = 0.5f;
}

/// <summary>
///     Параметры расчета маршрута для такси
/// </summary>
public class TaxiCostingOptions : CostingOptions
{
    /// <summary>
    ///     Использовать грунтовые дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать грунтовые дороги;
    ///     1 — использовать грунтовые дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_unpaved":0.5</example>
    [JsonProperty("use_unpaved")]
    public float UseUnpaved { get; set; } = 0.5f;


    /// <summary>
    ///     Использовать автомагистрали при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать автомагистрали;
    ///     1 (по умолчанию) — использовать автомагистрали.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_highways":0</example>
    [JsonProperty("use_highways")]
    public float UseHighways { get; set; } = 1f;

    /// <summary>
    ///     Использовать платные дороги при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать платные дороги;
    ///     1 — использовать платные дороги.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_tolls":0</example>
    [JsonProperty("use_tolls")]
    public float UseTolls { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать паромные переправы при построении маршрута. Определяется значением от 0 до 1, где:
    ///     0 — не использовать паромные переправы;
    ///     1 — использовать паромные переправы.
    ///     Допускаются дробные значения.
    ///     По умолчанию — 0.5.
    /// </summary>
    /// <example>"use_ferry":0.1</example>
    [JsonProperty("use_ferry")]
    public float UseFerry { get; set; } = 0.5f;

    /// <summary>
    ///     Использовать при построении маршрута дороги, пересекающие границы других государств. Определяется значением от 0 до
    ///     1, где:
    ///     0 — не использовать использовать дороги пересекающие границы других государств;
    ///     1 (по умолчанию) — использовать использовать дороги пересекающие границы других государств.
    ///     Допускаются дробные значения.
    /// </summary>
    /// <example>"use_border_crossing":0</example>
    [JsonProperty("use_border_crossing")]
    public float UseBorderCrossing { get; set; } = 1f;
}